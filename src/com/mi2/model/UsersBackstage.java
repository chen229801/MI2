package com.mi2.model;

import com.base.model.BaseUsersBackstage;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Page;

import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class UsersBackstage extends BaseUsersBackstage<UsersBackstage> {
	public static final UsersBackstage dao = new UsersBackstage();

	@Override
	public List<UsersBackstage> getAllData(UsersBackstage usersBackstage) {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("select ub.*,srg.role_group_name from users_backstage ub,sys_role_group srg where ub.role_group_id=srg.role_group_id");
		ArrayList<Object> values = new ArrayList<>();
		if(usersBackstage!=null&&!usersBackstage.getAttrs().isEmpty()){
			if(StrKit.notBlank(usersBackstage.getSysUserName())){
				values.add(usersBackstage.getSysUserName());
				sbSql.append(" and ub.sys_user_name=?");
			}
		}
		return this.find(sbSql.toString(),values.toArray());
	}

	@Override
	public Page<UsersBackstage> getAllDataByPage(int pageNumber, int pageSize, UsersBackstage usersBackstage) {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("from users_backstage ub,sys_role_group srg where ub.role_group_id=srg.role_group_id ");
		ArrayList<Object> values = new ArrayList<>();
		if(usersBackstage!=null&&!usersBackstage.getAttrs().isEmpty()){
			Object searchKey = usersBackstage.getAttrs().get("search_key");
			if(StrKit.notBlank(searchKey==null?"":searchKey.toString())){
				sbSql.append(" and (ub.sys_user_name=? or ub.name like ?)");
				values.add(searchKey);
				values.add("%"+searchKey+"%");
			}
			if(StrKit.notBlank(usersBackstage.getStatus())){
				sbSql.append(" and ub.status=?");
				values.add(usersBackstage.getStatus());
			}
		}
		return this.paginate(pageNumber,pageSize,"select ub.*,srg.role_group_name ",sbSql.toString(),values.toArray());
	}
}
