package com.mi2.model;

import com.base.model.BaseUsersShoppingcar;
import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Db;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class UsersShoppingcar extends BaseUsersShoppingcar<UsersShoppingcar> {
	public static final UsersShoppingcar dao = new UsersShoppingcar();

	//删除用户购物车中已经支付成功的商品
	public void deleteUserCartPayGoods(BigDecimal userFrontId){
		if(null==userFrontId){
			return;
		}
		String sql = "delete users_shoppingcar usc where usc.user_front_id=? and usc.is_select_pay='0' and usc.phone_setmeal_id is null";
		Db.update(sql,userFrontId);

		UsersShoppingcar usc = new UsersShoppingcar();
		usc.setUserFrontId(userFrontId);
		usc.setIsSelectPay("0");
		List<UsersShoppingcar> uscList = this.getPhoneSetmealGoodsAllData(usc);
		for(UsersShoppingcar u : uscList){
			this.deleteUserCartGoodsById(u.getUsersShoppingId());
		}
	}

	public void deleteUserCartGoodsById(BigDecimal users_shopping_id){
		if(null==users_shopping_id){
			return;
		}
		String sql = "delete users_shopcar_setmeal_goods ussg where ussg.users_shopping_id=?";
		Db.update(sql,users_shopping_id);
		this.deleteById(users_shopping_id);
	}

	//批量更新前台用户的商品支付项
	public void batchUpdateFrontUserCartGoods(UsersShoppingcar t){
		if(t.getUserFrontId()!=null&&t.getIsSelectPay()!=null){
			String sql = "update users_shoppingcar usc set usc.is_select_pay=? where usc.user_front_id=?";
			Db.update(sql,t.getIsSelectPay(),t.getUserFrontId());
		}
	}

	public BigDecimal getCartSumGoodsNum(BigDecimal userFrontId){
		String sql = "select sum(usc.shopping_num) goods_sum from users_shoppingcar usc where usc.user_front_id=?";
		UsersShoppingcar usc = this.findFirst(sql,userFrontId);
		return BigDecimal.valueOf(Long.valueOf(usc.get("goods_sum",0)+""));
	}

	public String saveOrUpdate(UsersShoppingcar t){
		List<UsersShoppingcar> uscList = UsersShoppingcar.dao.getAllData(t);
		if(uscList.size()>0){
			UsersShoppingcar newUsc = uscList.get(0);
			newUsc.setShoppingNum(newUsc.getShoppingNum().add(t.getShoppingNum()));
			newUsc.update();
			return "update";
		}else{
			t.save();
			return "save";
		}
	}

	@Override
	public List<UsersShoppingcar> getAllData(UsersShoppingcar t) {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("select * from users_shoppingcar usc where 1=1 ");
		ArrayList<Object> values = new ArrayList<>();
		if(t!=null&&!t.getAttrs().isEmpty()){
			if(t.getUserFrontId()!=null){
				sbSql.append(" and usc.user_front_id=?");
				values.add(t.getUserFrontId());
			}
			if(t.getGoodsId()!=null){
				sbSql.append(" and usc.goods_id=?");
				values.add(t.getGoodsId());
			}
			if(t.getPhoneGoodsId()!=null){
				sbSql.append(" and usc.phone_goods_id=?");
				values.add(t.getPhoneGoodsId());
			}
			if(t.getGoodsColorId()!=null){
				sbSql.append(" and usc.goods_color_id=?");
				values.add(t.getGoodsColorId());
			}
			if(t.getPhoneSetmealId()!=null){
				sbSql.append(" and usc.phone_setmeal_id=?");
				values.add(t.getPhoneSetmealId());
			}
			if(t.getAdaptPhoneTypeId()!=null){
				sbSql.append(" and usc.adapt_phone_type_id=?");
				values.add(t.getAdaptPhoneTypeId());
			}
		}
		return this.find(sbSql.toString(),values.toArray());
	}

	public List<UsersShoppingcar> getCommonGoodsData(UsersShoppingcar t,StringBuilder sbSql){
		ArrayList<Object> values = new ArrayList<>();
		if(t!=null&&!t.getAttrs().isEmpty()){
			if(t.getUserFrontId()!=null){
				sbSql.append(" and usc.user_front_id=?");
				values.add(t.getUserFrontId());
			}
			if(StrKit.notBlank(t.getIsSelectPay())){
				sbSql.append(" and usc.is_select_pay=?");
				values.add(t.getIsSelectPay());
			}
		}
		return this.find(sbSql.toString(),values.toArray());
	}

	public List<UsersShoppingcar> getPhoneGoodsAllData(UsersShoppingcar t) {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("select pgv.*,usc.user_front_id,usc.users_shopping_id,usc.shopping_num,usc.shopping_time,usc.goods_color_id,usc.phone_setmeal_id,usc.is_select_pay,usc.shopping_goods_status,usc.shopping_goods_remark,usc.last_update_date,gc.goods_color_img_url,gav.goods_addribute_val_name goods_color_name,gav.goods_color_code from users_shoppingcar usc,phone_goods_view pgv,goods_color gc,goods_addribute_val gav where usc.phone_goods_id is not null and usc.phone_goods_id=pgv.phone_goods_id and usc.goods_color_id = gc.goods_color_id and gc.goods_addribute_val_id = gav.goods_addribute_val_id ");
		return this.getCommonGoodsData(t,sbSql);
	}

	public List<UsersShoppingcar> getOtherGoodsAllData(UsersShoppingcar t){
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("select ogv.*,usc.users_shopping_id,usc.user_front_id,usc.shopping_num,usc.shopping_time,usc.goods_color_id,usc.is_select_pay,usc.shopping_goods_status,usc.shopping_goods_remark,usc.last_update_date,gc.goods_color_img_url,gav.goods_addribute_val_name goods_color_name,gav.goods_color_code from users_shoppingcar usc,other_goods_view ogv,goods_color gc,goods_addribute_val gav where usc.goods_id = ogv.goods_id and (usc.adapt_phone_type_id is null or usc.adapt_phone_type_id = ogv.adapt_phone_type_id) and usc.goods_color_id = gc.goods_color_id and gc.goods_addribute_val_id = gav.goods_addribute_val_id ");
		return this.getCommonGoodsData(t,sbSql);
	}

	public List<UsersShoppingcar> getPhoneSetmealGoodsAllData(UsersShoppingcar t) {
		StringBuilder sbSql = new StringBuilder();
		sbSql.append("select ps.*,usc.users_shopping_id,usc.user_front_id,usc.shopping_num,usc.shopping_time,usc.is_select_pay,usc.phone_setmeal_id,usc.shopping_goods_status,usc.shopping_goods_remark,usc.last_update_date,usc.adapt_phone_type_id,gst.goods_small_type_name,gst.goods_small_type_remark,gst.goods_small_type_image from users_shoppingcar usc,phone_setmeal ps,goods_small_type gst where usc.phone_setmeal_id = ps.phone_setmeal_id and ps.goods_small_type_id = gst.goods_small_type_id ");
		List<UsersShoppingcar> uscList = this.getCommonGoodsData(t,sbSql);
		for(int i=0,size=uscList.size();i<size;i++){
			UsersShopcarSetmealGoods ussg = new UsersShopcarSetmealGoods();
			ussg.setUsersShoppingId(uscList.get(i).getUsersShoppingId());
			uscList.get(i).put("usersShopcarSetmealGoodsList",UsersShopcarSetmealGoods.dao.getAllData(ussg));
		}
		return uscList;
	}
}
